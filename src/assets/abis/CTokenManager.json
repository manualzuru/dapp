{
  "contractName": "CTokenManager",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "DiscardCToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "WhitelistCToken",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "whitelistCToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "discardCToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "isCToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"whitelistCToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"isCToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"discardCToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"DiscardCToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"WhitelistCToken\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Sablier\\r\",\"methods\":{\"discardCToken(address)\":{\"details\":\"Throws if the caller is not the owner of the contract.\\r Throws if token is not whitelisted.\\r\",\"params\":{\"tokenAddress\":\"The address of the cToken to discard.\\r\"}},\"initialize(address)\":{\"details\":\"The Ownable constructor sets the original `owner` of the contract to the sender\\r account.\\r\"},\"isCToken(address)\":{\"params\":{\"tokenAddress\":\"The address of the token to check.\\r\"},\"return\":\"bool true=it is cToken, otherwise false.\\r\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\\r\"},\"owner()\":{\"return\":\"the address of the owner.\\r\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\\r\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\\r\"}},\"whitelistCToken(address)\":{\"details\":\"Throws if the caller is not the owner of the contract.\\r Throws is the token is whitelisted.\\r Throws if the given address is not a `cToken`.\\r\",\"params\":{\"tokenAddress\":\"The address of the cToken to whitelist.\\r\"}}},\"title\":\"CTokenManager\\r\"},\"userdoc\":{\"methods\":{\"constructor\":\"* Contract Logic Starts Here \",\"discardCToken(address)\":{\"notice\":\"Discards a previously whitelisted cToken.\\r\"},\"isCToken(address)\":{\"notice\":\"Checks if the given token address is one of the whitelisted cTokens.\\r\"},\"whitelistCToken(address)\":{\"notice\":\"Whitelists a cToken for compounding streams.\\r\"}}}},\"settings\":{\"compilationTarget\":{\"/G/new/IPFS-ETH-MarketPlace/contracts/sablier/CTokenManager.sol\":\"CTokenManager\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1500},\"remappings\":[]},\"sources\":{\"/G/new/IPFS-ETH-MarketPlace/contracts/sablier/CTokenManager.sol\":{\"keccak256\":\"0xfc1e335945fdd31eed5b57bf2f68d163838a3650c127f02961a2be9204399993\",\"urls\":[\"bzz-raw://6b284176df278a7dcc1668aabeea3e3583b13e1d360c6d3c2a81c8386941e369\",\"dweb:/ipfs/QmXFQMo2rxiZAUKYiqPk3DgDTwM7VFQrMW4SUnKXfhNg8k\"]},\"/G/new/IPFS-ETH-MarketPlace/contracts/sablier/interfaces/ICERC20.sol\":{\"keccak256\":\"0xfcb150839085bf50ce80e2f3ac4f2616c80f3d56c53f6951a0bd8d407ab9e7b0\",\"urls\":[\"bzz-raw://4fd56991accd9eac8eea0f9b640f2a586bea36c4b455e68fa91a2be9b73709a0\",\"dweb:/ipfs/QmSBa5byYBd31578TsvMkF6d32zU9VsziAHn9NUk5VbRqq\"]},\"/G/new/IPFS-ETH-MarketPlace/contracts/sablier/interfaces/ICTokenManager.sol\":{\"keccak256\":\"0x871e762c9f919c7eacfaf9d62f04fdce8983e93d29376820e1b7ee34af6d27a7\",\"urls\":[\"bzz-raw://c7d96bfc841afe3af071397ed7ffccf217def11fb710a2defd00937421acf985\",\"dweb:/ipfs/Qme4K8gpUjZirffizFBRRjegVfeshr4wx3EP6JcbzMZxwb\"]},\"/G/new/IPFS-ETH-MarketPlace/contracts/sablier/lifecycle/OwnableWithoutRenounce.sol\":{\"keccak256\":\"0xde7103e14ddf66cb97f4d56f232aa64727567c6e73d333edba76b58709c0a808\",\"urls\":[\"bzz-raw://ce1f1d673c4bcf712b224aa88cb946c75f4f3b8c9af6b26dbfc81a897bcad10c\",\"dweb:/ipfs/Qmdk2vwMVQmsDMafYaotCDgLyTqwJxLgWHskTBMhuzRxuZ\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0d4306da5305cb78f09c70c18ec86dbc66f22fa5ade90edc20e1ab88e16d4d10\",\"urls\":[\"bzz-raw://c89dee1b8e96cb83f529b8b5c93be6b420c1913363a3fed01241942f08cc968f\",\"dweb:/ipfs/QmfWWwzg9hah3YwZRFWvAwq91HLjCHkKnxXqP6uLGURUou\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506100243361002960201b6103431760201c565b610144565b600054610100900460ff168061004b575061004b6001600160e01b0361013e16565b80610059575060005460ff16155b6100ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610765602e913960400191505060405180910390fd5b600054610100900460ff161580156100d9576000805460ff1961ff0019909116610100171660011790555b603380546001600160a01b0319166001600160a01b0384811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3801561013a576000805461ff00191690555b5050565b303b1590565b610612806101536000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638f32d59b1161005b5780638f32d59b14610108578063c4d66de814610110578063dd21963514610136578063f2fde38b1461015c5761007d565b80630a7d2e1d146100825780632f52e595146100aa5780638da5cb5b146100e4575b600080fd5b6100a86004803603602081101561009857600080fd5b50356001600160a01b0316610182565b005b6100d0600480360360208110156100c057600080fd5b50356001600160a01b03166102f0565b604080519115158252519081900360200190f35b6100ec61030e565b604080516001600160a01b039092168252519081900360200190f35b6100d061031d565b6100a86004803603602081101561012657600080fd5b50356001600160a01b0316610343565b6100a86004803603602081101561014c57600080fd5b50356001600160a01b031661044d565b6100a86004803603602081101561017257600080fd5b50356001600160a01b0316610501565b61018a61031d565b61019357600080fd5b61019c816102f0565b156101ee576040805162461bcd60e51b815260206004820152601560248201527f63546f6b656e2069732077686974656c69737465640000000000000000000000604482015290519081900360640190fd5b806001600160a01b031663fe9c44ae6040518163ffffffff1660e01b815260040160206040518083038186803b15801561022757600080fd5b505afa15801561023b573d6000803e3d6000fd5b505050506040513d602081101561025157600080fd5b50516102a4576040805162461bcd60e51b815260206004820152601360248201527f746f6b656e206973206e6f742063546f6b656e00000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116600081815260666020526040808220805460ff19166001179055517f6b059312af62bbe5ac6a9a59761eaf444083ad356cdbf3761bc98857e061ecb59190a250565b6001600160a01b031660009081526066602052604090205460ff1690565b6033546001600160a01b031690565b6033546000906001600160a01b031661033461051e565b6001600160a01b031614905090565b600054610100900460ff168061035c575061035c610522565b8061036a575060005460ff16155b6103a55760405162461bcd60e51b815260040180806020018281038252602e8152602001806105b0602e913960400191505060405180910390fd5b600054610100900460ff161580156103d0576000805460ff1961ff0019909116610100171660011790555b603380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0384811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a38015610449576000805461ff00191690555b5050565b61045561031d565b61045e57600080fd5b610467816102f0565b6104b8576040805162461bcd60e51b815260206004820152601960248201527f63546f6b656e206973206e6f742077686974656c697374656400000000000000604482015290519081900360640190fd5b6001600160a01b038116600081815260666020526040808220805460ff19169055517f59699d7c9076678da939b1a98c86f40d8780564966fb30bf84d01b686dbb24c99190a250565b61050961031d565b61051257600080fd5b61051b81610528565b50565b3390565b303b1590565b6001600160a01b03811661053b57600080fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039290921691909117905556fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a723158207f3056b361b87718e0b7745cb4b15bdb28190d35f677e4e422f2b8a13e43d10e64736f6c634300050b0032436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638f32d59b1161005b5780638f32d59b14610108578063c4d66de814610110578063dd21963514610136578063f2fde38b1461015c5761007d565b80630a7d2e1d146100825780632f52e595146100aa5780638da5cb5b146100e4575b600080fd5b6100a86004803603602081101561009857600080fd5b50356001600160a01b0316610182565b005b6100d0600480360360208110156100c057600080fd5b50356001600160a01b03166102f0565b604080519115158252519081900360200190f35b6100ec61030e565b604080516001600160a01b039092168252519081900360200190f35b6100d061031d565b6100a86004803603602081101561012657600080fd5b50356001600160a01b0316610343565b6100a86004803603602081101561014c57600080fd5b50356001600160a01b031661044d565b6100a86004803603602081101561017257600080fd5b50356001600160a01b0316610501565b61018a61031d565b61019357600080fd5b61019c816102f0565b156101ee576040805162461bcd60e51b815260206004820152601560248201527f63546f6b656e2069732077686974656c69737465640000000000000000000000604482015290519081900360640190fd5b806001600160a01b031663fe9c44ae6040518163ffffffff1660e01b815260040160206040518083038186803b15801561022757600080fd5b505afa15801561023b573d6000803e3d6000fd5b505050506040513d602081101561025157600080fd5b50516102a4576040805162461bcd60e51b815260206004820152601360248201527f746f6b656e206973206e6f742063546f6b656e00000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116600081815260666020526040808220805460ff19166001179055517f6b059312af62bbe5ac6a9a59761eaf444083ad356cdbf3761bc98857e061ecb59190a250565b6001600160a01b031660009081526066602052604090205460ff1690565b6033546001600160a01b031690565b6033546000906001600160a01b031661033461051e565b6001600160a01b031614905090565b600054610100900460ff168061035c575061035c610522565b8061036a575060005460ff16155b6103a55760405162461bcd60e51b815260040180806020018281038252602e8152602001806105b0602e913960400191505060405180910390fd5b600054610100900460ff161580156103d0576000805460ff1961ff0019909116610100171660011790555b603380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0384811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a38015610449576000805461ff00191690555b5050565b61045561031d565b61045e57600080fd5b610467816102f0565b6104b8576040805162461bcd60e51b815260206004820152601960248201527f63546f6b656e206973206e6f742077686974656c697374656400000000000000604482015290519081900360640190fd5b6001600160a01b038116600081815260666020526040808220805460ff19169055517f59699d7c9076678da939b1a98c86f40d8780564966fb30bf84d01b686dbb24c99190a250565b61050961031d565b61051257600080fd5b61051b81610528565b50565b3390565b303b1590565b6001600160a01b03811661053b57600080fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039290921691909117905556fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a723158207f3056b361b87718e0b7745cb4b15bdb28190d35f677e4e422f2b8a13e43d10e64736f6c634300050b0032",
  "sourceMap": "213:1880:3:-;;;483:85;8:9:-1;5:2;;;30:1;27;20:12;5:2;483:85:3;515:45;549:10;515:33;;;;;:45;;:::i;:::-;213:1880;;1122:145:13;1024:12:21;;;;;;;;:31;;-1:-1:-1;1040:15:21;-1:-1:-1;;;;;1040:13:21;:15;:::i;:::-;1024:47;;;-1:-1:-1;1060:11:21;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:21;;;;;1225:18;1213:4;1225:18;;;1170:80;1188:6:13;:15;;-1:-1:-1;;;;;;1188:15:13;-1:-1:-1;;;;;1188:15:13;;;;;;;;;;;1219:40;;1252:6;;;-1:-1:-1;;1219:40:13;;-1:-1:-1;;1219:40:13;1268:14:21;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:21;;;1264:55;1122:145:13;;:::o;1409:498:21:-;1820:4;1864:17;1895:7;1409:498;:::o;213:1880:3:-;;;;;;;",
  "deployedSourceMap": "213:1880:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;213:1880:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;925:301;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;925:301:3;-1:-1:-1;;;;;925:301:3;;:::i;:::-;;1976:114;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1976:114:3;-1:-1:-1;;;;;1976:114:3;;:::i;:::-;;;;;;;;;;;;;;;;;;1335:79:13;;;:::i;:::-;;;;-1:-1:-1;;;;;1335:79:13;;;;;;;;;;;;;;1670:94;;;:::i;1122:145::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1122:145:13;-1:-1:-1;;;;;1122:145:13;;:::i;1489:226:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1489:226:3;-1:-1:-1;;;;;1489:226:3;;:::i;1941:109:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1941:109:13;-1:-1:-1;;;;;1941:109:13;;:::i;925:301:3:-;1547:9:13;:7;:9::i;:::-;1539:18;;;;;;1011:22:3;1020:12;1011:8;:22::i;:::-;1010:23;1002:57;;;;;-1:-1:-1;;;1002:57:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1086:12;-1:-1:-1;;;;;1078:30:3;;:32;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1078:32:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1078:32:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1078:32:3;1070:64;;;;;-1:-1:-1;;;1070:64:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1145:21:3;;;;;;:7;:21;;;;;;:28;;-1:-1:-1;;1145:28:3;1169:4;1145:28;;;1189:29;;;1145:21;1189:29;925:301;:::o;1976:114::-;-1:-1:-1;;;;;2061:21:3;2037:4;2061:21;;;:7;:21;;;;;;;;;1976:114::o;1335:79:13:-;1400:6;;-1:-1:-1;;;;;1400:6:13;1335:79;:::o;1670:94::-;1750:6;;1710:4;;-1:-1:-1;;;;;1750:6:13;1734:12;:10;:12::i;:::-;-1:-1:-1;;;;;1734:22:13;;1727:29;;1670:94;:::o;1122:145::-;1024:12:21;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:21;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:21;;;;;1225:18;1213:4;1225:18;;;1170:80;1188:6:13;:15;;;;-1:-1:-1;;;;;1188:15:13;;;;;;;;;;;1219:40;;1252:6;;;-1:-1:-1;;1219:40:13;;-1:-1:-1;;1219:40:13;1268:14:21;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:21;;;1264:55;1122:145:13;;:::o;1489:226:3:-;1547:9:13;:7;:9::i;:::-;1539:18;;;;;;1572:22:3;1581:12;1572:8;:22::i;:::-;1564:60;;;;;-1:-1:-1;;;1564:60:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1635:21:3;;1659:5;1635:21;;;:7;:21;;;;;;:29;;-1:-1:-1;;1635:29:3;;;1680:27;;;1659:5;1680:27;1489:226;:::o;1941:109:13:-;1547:9;:7;:9::i;:::-;1539:18;;;;;;2014:28;2033:8;2014:18;:28::i;:::-;1941:109;:::o;791:88:16:-;862:10;791:88;:::o;1409:498:21:-;1820:4;1864:17;1895:7;1409:498;:::o;2200:187:13:-;-1:-1:-1;;;;;2274:22:13;;2266:31;;;;;;2334:6;;2313:38;;-1:-1:-1;;;;;2313:38:13;;;;2334:6;;2313:38;;2334:6;;2313:38;2362:6;:17;;;;-1:-1:-1;;;;;2362:17:13;;;;;;;;;;2200:187::o",
  "source": "pragma solidity 0.5.11;\r\n\r\nimport \"./interfaces/ICERC20.sol\";\r\nimport \"./lifecycle/OwnableWithoutRenounce.sol\";\r\nimport \"./interfaces/ICTokenManager.sol\";\r\n\r\n/**\r\n * @title CTokenManager\r\n * @author Sablier\r\n */\r\ncontract CTokenManager is ICTokenManager, OwnableWithoutRenounce {\r\n    /*** Storage Properties ***/\r\n\r\n    /**\r\n     * @notice Mapping of cTokens which can be used\r\n     */\r\n    mapping(address => bool) private cTokens;\r\n\r\n    /*** Contract Logic Starts Here */\r\n\r\n    constructor() public {\r\n        OwnableWithoutRenounce.initialize(msg.sender);\r\n    }\r\n\r\n    /*** Owner Functions ***/\r\n\r\n    /**\r\n     * @notice Whitelists a cToken for compounding streams.\r\n     * @dev Throws if the caller is not the owner of the contract.\r\n     *  Throws is the token is whitelisted.\r\n     *  Throws if the given address is not a `cToken`.\r\n     * @param tokenAddress The address of the cToken to whitelist.\r\n     */\r\n    function whitelistCToken(address tokenAddress) external onlyOwner {\r\n        require(!isCToken(tokenAddress), \"cToken is whitelisted\");\r\n        require(ICERC20(tokenAddress).isCToken(), \"token is not cToken\");\r\n        cTokens[tokenAddress] = true;\r\n        emit WhitelistCToken(tokenAddress);\r\n    }\r\n\r\n    /**\r\n     * @notice Discards a previously whitelisted cToken.\r\n     * @dev Throws if the caller is not the owner of the contract.\r\n     *  Throws if token is not whitelisted.\r\n     * @param tokenAddress The address of the cToken to discard.\r\n     */\r\n    function discardCToken(address tokenAddress) external onlyOwner {\r\n        require(isCToken(tokenAddress), \"cToken is not whitelisted\");\r\n        cTokens[tokenAddress] = false;\r\n        emit DiscardCToken(tokenAddress);\r\n    }\r\n\r\n    /*** View Functions ***/\r\n    /**\r\n     * @notice Checks if the given token address is one of the whitelisted cTokens.\r\n     * @param tokenAddress The address of the token to check.\r\n     * @return bool true=it is cToken, otherwise false.\r\n     */\r\n    function isCToken(address tokenAddress) public view returns (bool) {\r\n        return cTokens[tokenAddress];\r\n    }\r\n}\r\n",
  "sourcePath": "G:/new/IPFS-ETH-MarketPlace/contracts/sablier/CTokenManager.sol",
  "ast": {
    "absolutePath": "/G/new/IPFS-ETH-MarketPlace/contracts/sablier/CTokenManager.sol",
    "exportedSymbols": {
      "CTokenManager": [
        1162
      ]
    },
    "id": 1163,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1067,
        "literals": [
          "solidity",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/G/new/IPFS-ETH-MarketPlace/contracts/sablier/interfaces/ICERC20.sol",
        "file": "./interfaces/ICERC20.sol",
        "id": 1068,
        "nodeType": "ImportDirective",
        "scope": 1163,
        "sourceUnit": 4332,
        "src": "27:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/G/new/IPFS-ETH-MarketPlace/contracts/sablier/lifecycle/OwnableWithoutRenounce.sol",
        "file": "./lifecycle/OwnableWithoutRenounce.sol",
        "id": 1069,
        "nodeType": "ImportDirective",
        "scope": 1163,
        "sourceUnit": 4563,
        "src": "63:48:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/G/new/IPFS-ETH-MarketPlace/contracts/sablier/interfaces/ICTokenManager.sol",
        "file": "./interfaces/ICTokenManager.sol",
        "id": 1070,
        "nodeType": "ImportDirective",
        "scope": 1163,
        "sourceUnit": 4360,
        "src": "113:41:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1071,
              "name": "ICTokenManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4359,
              "src": "239:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICTokenManager_$4359",
                "typeString": "contract ICTokenManager"
              }
            },
            "id": 1072,
            "nodeType": "InheritanceSpecifier",
            "src": "239:14:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1073,
              "name": "OwnableWithoutRenounce",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4562,
              "src": "255:22:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnableWithoutRenounce_$4562",
                "typeString": "contract OwnableWithoutRenounce"
              }
            },
            "id": 1074,
            "nodeType": "InheritanceSpecifier",
            "src": "255:22:3"
          }
        ],
        "contractDependencies": [
          4359,
          4562,
          4804,
          5263
        ],
        "contractKind": "contract",
        "documentation": "@title CTokenManager\r\n@author Sablier\r",
        "fullyImplemented": true,
        "id": 1162,
        "linearizedBaseContracts": [
          1162,
          4562,
          4804,
          5263,
          4359
        ],
        "name": "CTokenManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1078,
            "name": "cTokens",
            "nodeType": "VariableDeclaration",
            "scope": 1162,
            "src": "392:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1077,
              "keyType": {
                "id": 1075,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "400:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "392:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1076,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "411:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1088,
              "nodeType": "Block",
              "src": "504:64:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1084,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5278,
                          "src": "549:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "549:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1081,
                        "name": "OwnableWithoutRenounce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4562,
                        "src": "515:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OwnableWithoutRenounce_$4562_$",
                          "typeString": "type(contract OwnableWithoutRenounce)"
                        }
                      },
                      "id": 1083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4494,
                      "src": "515:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "515:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1087,
                  "nodeType": "ExpressionStatement",
                  "src": "515:45:3"
                }
              ]
            },
            "documentation": "* Contract Logic Starts Here ",
            "id": 1089,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1079,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "494:2:3"
            },
            "returnParameters": {
              "id": 1080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "504:0:3"
            },
            "scope": 1162,
            "src": "483:85:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1123,
              "nodeType": "Block",
              "src": "991:235:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1010:23:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1098,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1091,
                              "src": "1020:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1097,
                            "name": "isCToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1161,
                            "src": "1011:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 1099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1011:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63546f6b656e2069732077686974656c6973746564",
                        "id": 1101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1035:23:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9487ed807424039112da40472c0c1ff850943632213446e98c037dc96fc79893",
                          "typeString": "literal_string \"cToken is whitelisted\""
                        },
                        "value": "cToken is whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9487ed807424039112da40472c0c1ff850943632213446e98c037dc96fc79893",
                          "typeString": "literal_string \"cToken is whitelisted\""
                        }
                      ],
                      "id": 1096,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5281,
                        5282
                      ],
                      "referencedDeclaration": 5282,
                      "src": "1002:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1002:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1103,
                  "nodeType": "ExpressionStatement",
                  "src": "1002:57:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1106,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1091,
                                "src": "1086:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1105,
                              "name": "ICERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4331,
                              "src": "1078:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICERC20_$4331_$",
                                "typeString": "type(contract ICERC20)"
                              }
                            },
                            "id": 1107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1078:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICERC20_$4331",
                              "typeString": "contract ICERC20"
                            }
                          },
                          "id": 1108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isCToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4268,
                          "src": "1078:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 1109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1078:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "746f6b656e206973206e6f742063546f6b656e",
                        "id": 1110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1112:21:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94408918d0155190e3219a7946203c292f159a9552a70d918c2bb3d30a65fab3",
                          "typeString": "literal_string \"token is not cToken\""
                        },
                        "value": "token is not cToken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94408918d0155190e3219a7946203c292f159a9552a70d918c2bb3d30a65fab3",
                          "typeString": "literal_string \"token is not cToken\""
                        }
                      ],
                      "id": 1104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5281,
                        5282
                      ],
                      "referencedDeclaration": 5282,
                      "src": "1070:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1070:64:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1112,
                  "nodeType": "ExpressionStatement",
                  "src": "1070:64:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1113,
                        "name": "cTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1078,
                        "src": "1145:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1115,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1114,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1091,
                        "src": "1153:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1145:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1169:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1145:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1118,
                  "nodeType": "ExpressionStatement",
                  "src": "1145:28:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1120,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1091,
                        "src": "1205:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1119,
                      "name": "WhitelistCToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4341,
                      "src": "1189:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1189:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1122,
                  "nodeType": "EmitStatement",
                  "src": "1184:34:3"
                }
              ]
            },
            "documentation": "@notice Whitelists a cToken for compounding streams.\r\n@dev Throws if the caller is not the owner of the contract.\r\n Throws is the token is whitelisted.\r\n Throws if the given address is not a `cToken`.\r\n@param tokenAddress The address of the cToken to whitelist.\r",
            "id": 1124,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1094,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1093,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4511,
                  "src": "981:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "981:9:3"
              }
            ],
            "name": "whitelistCToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1091,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "950:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1090,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "950:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "949:22:3"
            },
            "returnParameters": {
              "id": 1095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "991:0:3"
            },
            "scope": 1162,
            "src": "925:301:3",
            "stateMutability": "nonpayable",
            "superFunction": 4346,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1148,
              "nodeType": "Block",
              "src": "1553:162:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1133,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1126,
                            "src": "1581:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1132,
                          "name": "isCToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1161,
                          "src": "1572:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1572:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63546f6b656e206973206e6f742077686974656c6973746564",
                        "id": 1135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1596:27:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_028effcaad1abe4d036a94b79064c8ab8a88c2efe091f889a81695f48476bae9",
                          "typeString": "literal_string \"cToken is not whitelisted\""
                        },
                        "value": "cToken is not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_028effcaad1abe4d036a94b79064c8ab8a88c2efe091f889a81695f48476bae9",
                          "typeString": "literal_string \"cToken is not whitelisted\""
                        }
                      ],
                      "id": 1131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5281,
                        5282
                      ],
                      "referencedDeclaration": 5282,
                      "src": "1564:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1564:60:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1137,
                  "nodeType": "ExpressionStatement",
                  "src": "1564:60:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1138,
                        "name": "cTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1078,
                        "src": "1635:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1140,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1139,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1126,
                        "src": "1643:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1635:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1659:5:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1635:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1143,
                  "nodeType": "ExpressionStatement",
                  "src": "1635:29:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1145,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1126,
                        "src": "1694:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1144,
                      "name": "DiscardCToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4337,
                      "src": "1680:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1680:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1147,
                  "nodeType": "EmitStatement",
                  "src": "1675:32:3"
                }
              ]
            },
            "documentation": "@notice Discards a previously whitelisted cToken.\r\n@dev Throws if the caller is not the owner of the contract.\r\n Throws if token is not whitelisted.\r\n@param tokenAddress The address of the cToken to discard.\r",
            "id": 1149,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1129,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1128,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4511,
                  "src": "1543:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1543:9:3"
              }
            ],
            "name": "discardCToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1126,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1149,
                  "src": "1512:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1512:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1511:22:3"
            },
            "returnParameters": {
              "id": 1130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1553:0:3"
            },
            "scope": 1162,
            "src": "1489:226:3",
            "stateMutability": "nonpayable",
            "superFunction": 4351,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1160,
              "nodeType": "Block",
              "src": "2043:47:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1156,
                      "name": "cTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1078,
                      "src": "2061:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1158,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1157,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1151,
                      "src": "2069:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2061:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1155,
                  "id": 1159,
                  "nodeType": "Return",
                  "src": "2054:28:3"
                }
              ]
            },
            "documentation": "@notice Checks if the given token address is one of the whitelisted cTokens.\r\n@param tokenAddress The address of the token to check.\r\n@return bool true=it is cToken, otherwise false.\r",
            "id": 1161,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1151,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1161,
                  "src": "1994:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1994:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1993:22:3"
            },
            "returnParameters": {
              "id": 1155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1154,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1161,
                  "src": "2037:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1153,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2037:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2036:6:3"
            },
            "scope": 1162,
            "src": "1976:114:3",
            "stateMutability": "view",
            "superFunction": 4358,
            "visibility": "public"
          }
        ],
        "scope": 1163,
        "src": "213:1880:3"
      }
    ],
    "src": "0:2095:3"
  },
  "legacyAST": {
    "absolutePath": "/G/new/IPFS-ETH-MarketPlace/contracts/sablier/CTokenManager.sol",
    "exportedSymbols": {
      "CTokenManager": [
        1162
      ]
    },
    "id": 1163,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1067,
        "literals": [
          "solidity",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/G/new/IPFS-ETH-MarketPlace/contracts/sablier/interfaces/ICERC20.sol",
        "file": "./interfaces/ICERC20.sol",
        "id": 1068,
        "nodeType": "ImportDirective",
        "scope": 1163,
        "sourceUnit": 4332,
        "src": "27:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/G/new/IPFS-ETH-MarketPlace/contracts/sablier/lifecycle/OwnableWithoutRenounce.sol",
        "file": "./lifecycle/OwnableWithoutRenounce.sol",
        "id": 1069,
        "nodeType": "ImportDirective",
        "scope": 1163,
        "sourceUnit": 4563,
        "src": "63:48:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/G/new/IPFS-ETH-MarketPlace/contracts/sablier/interfaces/ICTokenManager.sol",
        "file": "./interfaces/ICTokenManager.sol",
        "id": 1070,
        "nodeType": "ImportDirective",
        "scope": 1163,
        "sourceUnit": 4360,
        "src": "113:41:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1071,
              "name": "ICTokenManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4359,
              "src": "239:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICTokenManager_$4359",
                "typeString": "contract ICTokenManager"
              }
            },
            "id": 1072,
            "nodeType": "InheritanceSpecifier",
            "src": "239:14:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1073,
              "name": "OwnableWithoutRenounce",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4562,
              "src": "255:22:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnableWithoutRenounce_$4562",
                "typeString": "contract OwnableWithoutRenounce"
              }
            },
            "id": 1074,
            "nodeType": "InheritanceSpecifier",
            "src": "255:22:3"
          }
        ],
        "contractDependencies": [
          4359,
          4562,
          4804,
          5263
        ],
        "contractKind": "contract",
        "documentation": "@title CTokenManager\r\n@author Sablier\r",
        "fullyImplemented": true,
        "id": 1162,
        "linearizedBaseContracts": [
          1162,
          4562,
          4804,
          5263,
          4359
        ],
        "name": "CTokenManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1078,
            "name": "cTokens",
            "nodeType": "VariableDeclaration",
            "scope": 1162,
            "src": "392:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1077,
              "keyType": {
                "id": 1075,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "400:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "392:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1076,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "411:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1088,
              "nodeType": "Block",
              "src": "504:64:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1084,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5278,
                          "src": "549:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "549:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1081,
                        "name": "OwnableWithoutRenounce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4562,
                        "src": "515:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OwnableWithoutRenounce_$4562_$",
                          "typeString": "type(contract OwnableWithoutRenounce)"
                        }
                      },
                      "id": 1083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4494,
                      "src": "515:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "515:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1087,
                  "nodeType": "ExpressionStatement",
                  "src": "515:45:3"
                }
              ]
            },
            "documentation": "* Contract Logic Starts Here ",
            "id": 1089,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1079,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "494:2:3"
            },
            "returnParameters": {
              "id": 1080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "504:0:3"
            },
            "scope": 1162,
            "src": "483:85:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1123,
              "nodeType": "Block",
              "src": "991:235:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1010:23:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1098,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1091,
                              "src": "1020:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1097,
                            "name": "isCToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1161,
                            "src": "1011:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 1099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1011:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63546f6b656e2069732077686974656c6973746564",
                        "id": 1101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1035:23:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9487ed807424039112da40472c0c1ff850943632213446e98c037dc96fc79893",
                          "typeString": "literal_string \"cToken is whitelisted\""
                        },
                        "value": "cToken is whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9487ed807424039112da40472c0c1ff850943632213446e98c037dc96fc79893",
                          "typeString": "literal_string \"cToken is whitelisted\""
                        }
                      ],
                      "id": 1096,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5281,
                        5282
                      ],
                      "referencedDeclaration": 5282,
                      "src": "1002:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1002:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1103,
                  "nodeType": "ExpressionStatement",
                  "src": "1002:57:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1106,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1091,
                                "src": "1086:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1105,
                              "name": "ICERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4331,
                              "src": "1078:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICERC20_$4331_$",
                                "typeString": "type(contract ICERC20)"
                              }
                            },
                            "id": 1107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1078:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICERC20_$4331",
                              "typeString": "contract ICERC20"
                            }
                          },
                          "id": 1108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isCToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4268,
                          "src": "1078:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 1109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1078:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "746f6b656e206973206e6f742063546f6b656e",
                        "id": 1110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1112:21:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94408918d0155190e3219a7946203c292f159a9552a70d918c2bb3d30a65fab3",
                          "typeString": "literal_string \"token is not cToken\""
                        },
                        "value": "token is not cToken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94408918d0155190e3219a7946203c292f159a9552a70d918c2bb3d30a65fab3",
                          "typeString": "literal_string \"token is not cToken\""
                        }
                      ],
                      "id": 1104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5281,
                        5282
                      ],
                      "referencedDeclaration": 5282,
                      "src": "1070:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1070:64:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1112,
                  "nodeType": "ExpressionStatement",
                  "src": "1070:64:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1113,
                        "name": "cTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1078,
                        "src": "1145:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1115,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1114,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1091,
                        "src": "1153:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1145:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1169:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1145:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1118,
                  "nodeType": "ExpressionStatement",
                  "src": "1145:28:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1120,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1091,
                        "src": "1205:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1119,
                      "name": "WhitelistCToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4341,
                      "src": "1189:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1189:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1122,
                  "nodeType": "EmitStatement",
                  "src": "1184:34:3"
                }
              ]
            },
            "documentation": "@notice Whitelists a cToken for compounding streams.\r\n@dev Throws if the caller is not the owner of the contract.\r\n Throws is the token is whitelisted.\r\n Throws if the given address is not a `cToken`.\r\n@param tokenAddress The address of the cToken to whitelist.\r",
            "id": 1124,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1094,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1093,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4511,
                  "src": "981:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "981:9:3"
              }
            ],
            "name": "whitelistCToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1091,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "950:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1090,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "950:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "949:22:3"
            },
            "returnParameters": {
              "id": 1095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "991:0:3"
            },
            "scope": 1162,
            "src": "925:301:3",
            "stateMutability": "nonpayable",
            "superFunction": 4346,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1148,
              "nodeType": "Block",
              "src": "1553:162:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1133,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1126,
                            "src": "1581:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1132,
                          "name": "isCToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1161,
                          "src": "1572:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1572:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63546f6b656e206973206e6f742077686974656c6973746564",
                        "id": 1135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1596:27:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_028effcaad1abe4d036a94b79064c8ab8a88c2efe091f889a81695f48476bae9",
                          "typeString": "literal_string \"cToken is not whitelisted\""
                        },
                        "value": "cToken is not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_028effcaad1abe4d036a94b79064c8ab8a88c2efe091f889a81695f48476bae9",
                          "typeString": "literal_string \"cToken is not whitelisted\""
                        }
                      ],
                      "id": 1131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5281,
                        5282
                      ],
                      "referencedDeclaration": 5282,
                      "src": "1564:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1564:60:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1137,
                  "nodeType": "ExpressionStatement",
                  "src": "1564:60:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1138,
                        "name": "cTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1078,
                        "src": "1635:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1140,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1139,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1126,
                        "src": "1643:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1635:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1659:5:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1635:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1143,
                  "nodeType": "ExpressionStatement",
                  "src": "1635:29:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1145,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1126,
                        "src": "1694:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1144,
                      "name": "DiscardCToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4337,
                      "src": "1680:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1680:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1147,
                  "nodeType": "EmitStatement",
                  "src": "1675:32:3"
                }
              ]
            },
            "documentation": "@notice Discards a previously whitelisted cToken.\r\n@dev Throws if the caller is not the owner of the contract.\r\n Throws if token is not whitelisted.\r\n@param tokenAddress The address of the cToken to discard.\r",
            "id": 1149,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1129,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1128,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4511,
                  "src": "1543:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1543:9:3"
              }
            ],
            "name": "discardCToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1126,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1149,
                  "src": "1512:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1512:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1511:22:3"
            },
            "returnParameters": {
              "id": 1130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1553:0:3"
            },
            "scope": 1162,
            "src": "1489:226:3",
            "stateMutability": "nonpayable",
            "superFunction": 4351,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1160,
              "nodeType": "Block",
              "src": "2043:47:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1156,
                      "name": "cTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1078,
                      "src": "2061:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1158,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1157,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1151,
                      "src": "2069:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2061:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1155,
                  "id": 1159,
                  "nodeType": "Return",
                  "src": "2054:28:3"
                }
              ]
            },
            "documentation": "@notice Checks if the given token address is one of the whitelisted cTokens.\r\n@param tokenAddress The address of the token to check.\r\n@return bool true=it is cToken, otherwise false.\r",
            "id": 1161,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1151,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1161,
                  "src": "1994:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1994:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1993:22:3"
            },
            "returnParameters": {
              "id": 1155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1154,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1161,
                  "src": "2037:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1153,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2037:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2036:6:3"
            },
            "scope": 1162,
            "src": "1976:114:3",
            "stateMutability": "view",
            "superFunction": 4358,
            "visibility": "public"
          }
        ],
        "scope": 1163,
        "src": "213:1880:3"
      }
    ],
    "src": "0:2095:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-08-01T15:25:45.183Z",
  "devdoc": {
    "author": "Sablier\r",
    "methods": {
      "discardCToken(address)": {
        "details": "Throws if the caller is not the owner of the contract.\r Throws if token is not whitelisted.\r",
        "params": {
          "tokenAddress": "The address of the cToken to discard.\r"
        }
      },
      "initialize(address)": {
        "details": "The Ownable constructor sets the original `owner` of the contract to the sender\r account.\r"
      },
      "isCToken(address)": {
        "params": {
          "tokenAddress": "The address of the token to check.\r"
        },
        "return": "bool true=it is cToken, otherwise false.\r"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract.\r"
      },
      "owner()": {
        "return": "the address of the owner.\r"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
        "params": {
          "newOwner": "The address to transfer ownership to.\r"
        }
      },
      "whitelistCToken(address)": {
        "details": "Throws if the caller is not the owner of the contract.\r Throws is the token is whitelisted.\r Throws if the given address is not a `cToken`.\r",
        "params": {
          "tokenAddress": "The address of the cToken to whitelist.\r"
        }
      }
    },
    "title": "CTokenManager\r"
  },
  "userdoc": {
    "methods": {
      "constructor": "* Contract Logic Starts Here ",
      "discardCToken(address)": {
        "notice": "Discards a previously whitelisted cToken.\r"
      },
      "isCToken(address)": {
        "notice": "Checks if the given token address is one of the whitelisted cTokens.\r"
      },
      "whitelistCToken(address)": {
        "notice": "Whitelists a cToken for compounding streams.\r"
      }
    }
  }
}