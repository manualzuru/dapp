{
  "contractName": "CTokenManager",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "DiscardCToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "WhitelistCToken",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "whitelistCToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "discardCToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "isCToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"whitelistCToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"isCToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"discardCToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"DiscardCToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"WhitelistCToken\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Sablier\",\"methods\":{\"discardCToken(address)\":{\"details\":\"Throws if the caller is not the owner of the contract. Throws if token is not whitelisted.\",\"params\":{\"tokenAddress\":\"The address of the cToken to discard.\"}},\"initialize(address)\":{\"details\":\"The Ownable constructor sets the original `owner` of the contract to the sender account.\"},\"isCToken(address)\":{\"params\":{\"tokenAddress\":\"The address of the token to check.\"},\"return\":\"bool true=it is cToken, otherwise false.\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"whitelistCToken(address)\":{\"details\":\"Throws if the caller is not the owner of the contract. Throws is the token is whitelisted. Throws if the given address is not a `cToken`.\",\"params\":{\"tokenAddress\":\"The address of the cToken to whitelist.\"}}},\"title\":\"CTokenManager\"},\"userdoc\":{\"methods\":{\"constructor\":\"* Contract Logic Starts Here \",\"discardCToken(address)\":{\"notice\":\"Discards a previously whitelisted cToken.\"},\"isCToken(address)\":{\"notice\":\"Checks if the given token address is one of the whitelisted cTokens.\"},\"whitelistCToken(address)\":{\"notice\":\"Whitelists a cToken for compounding streams.\"}}}},\"settings\":{\"compilationTarget\":{\"/media/dhiraj/code/hackfs/shopfs/IPFS-ETH-MarketPlace/contracts/sablier/CTokenManager.sol\":\"CTokenManager\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1500},\"remappings\":[]},\"sources\":{\"/media/dhiraj/code/hackfs/shopfs/IPFS-ETH-MarketPlace/contracts/sablier/CTokenManager.sol\":{\"keccak256\":\"0x9bd61edbabee52af918ea6de418f3930f1c6271163c313bdfc219eb88c657c62\",\"urls\":[\"bzz-raw://ec7b167371d491374abce2ed22107d5061146da02d848583e1e3cf93913539c4\",\"dweb:/ipfs/QmW6KYypu4AsWAnu7xFoYcsoVZyzUFbMpyp693D9EvXic5\"]},\"/media/dhiraj/code/hackfs/shopfs/IPFS-ETH-MarketPlace/contracts/sablier/interfaces/ICERC20.sol\":{\"keccak256\":\"0xaa94199130c722b92bddfe7be409c9a79be84bf1536c22340585620c6e0e833d\",\"urls\":[\"bzz-raw://2599c2da9e8a8d2cef38d02ee368773546f600d5539deb2e1172b019b7bbef63\",\"dweb:/ipfs/QmWgw9NiYrJ9cpdMbk7LgijnE7rqZf7domM3KYT5zZ2Hbf\"]},\"/media/dhiraj/code/hackfs/shopfs/IPFS-ETH-MarketPlace/contracts/sablier/interfaces/ICTokenManager.sol\":{\"keccak256\":\"0x52001c347b8af1a2ed75eff6c306998e53d2003aff1d1974381afb23fb1c7f10\",\"urls\":[\"bzz-raw://6189cdb86cdad57a5536022732c825a6e37e960c7ad21d8ff140d793542636d4\",\"dweb:/ipfs/QmSfgBkEXLRfddENZcMa9W7ipw5477Ur1p3VMn491T4b9F\"]},\"/media/dhiraj/code/hackfs/shopfs/IPFS-ETH-MarketPlace/contracts/sablier/lifecycle/OwnableWithoutRenounce.sol\":{\"keccak256\":\"0x20681bffccc19961afeca475dc2e8cbee3cf5788a9b0d318a609dc6812a290d1\",\"urls\":[\"bzz-raw://1b2f404687633190e4b9f66001e0f964270ff946ea2c19c142fcf8d4c18b0618\",\"dweb:/ipfs/QmVZuRZffry8bNvPJ2WneS3nN4Z8eC4a1dkDLmZsToqDrH\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0d4306da5305cb78f09c70c18ec86dbc66f22fa5ade90edc20e1ab88e16d4d10\",\"urls\":[\"bzz-raw://c89dee1b8e96cb83f529b8b5c93be6b420c1913363a3fed01241942f08cc968f\",\"dweb:/ipfs/QmfWWwzg9hah3YwZRFWvAwq91HLjCHkKnxXqP6uLGURUou\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506100243361002960201b6103431760201c565b610144565b600054610100900460ff168061004b575061004b6001600160e01b0361013e16565b80610059575060005460ff16155b6100ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610765602e913960400191505060405180910390fd5b600054610100900460ff161580156100d9576000805460ff1961ff0019909116610100171660011790555b603380546001600160a01b0319166001600160a01b0384811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3801561013a576000805461ff00191690555b5050565b303b1590565b610612806101536000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638f32d59b1161005b5780638f32d59b14610108578063c4d66de814610110578063dd21963514610136578063f2fde38b1461015c5761007d565b80630a7d2e1d146100825780632f52e595146100aa5780638da5cb5b146100e4575b600080fd5b6100a86004803603602081101561009857600080fd5b50356001600160a01b0316610182565b005b6100d0600480360360208110156100c057600080fd5b50356001600160a01b03166102f0565b604080519115158252519081900360200190f35b6100ec61030e565b604080516001600160a01b039092168252519081900360200190f35b6100d061031d565b6100a86004803603602081101561012657600080fd5b50356001600160a01b0316610343565b6100a86004803603602081101561014c57600080fd5b50356001600160a01b031661044d565b6100a86004803603602081101561017257600080fd5b50356001600160a01b0316610501565b61018a61031d565b61019357600080fd5b61019c816102f0565b156101ee576040805162461bcd60e51b815260206004820152601560248201527f63546f6b656e2069732077686974656c69737465640000000000000000000000604482015290519081900360640190fd5b806001600160a01b031663fe9c44ae6040518163ffffffff1660e01b815260040160206040518083038186803b15801561022757600080fd5b505afa15801561023b573d6000803e3d6000fd5b505050506040513d602081101561025157600080fd5b50516102a4576040805162461bcd60e51b815260206004820152601360248201527f746f6b656e206973206e6f742063546f6b656e00000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116600081815260666020526040808220805460ff19166001179055517f6b059312af62bbe5ac6a9a59761eaf444083ad356cdbf3761bc98857e061ecb59190a250565b6001600160a01b031660009081526066602052604090205460ff1690565b6033546001600160a01b031690565b6033546000906001600160a01b031661033461051e565b6001600160a01b031614905090565b600054610100900460ff168061035c575061035c610522565b8061036a575060005460ff16155b6103a55760405162461bcd60e51b815260040180806020018281038252602e8152602001806105b0602e913960400191505060405180910390fd5b600054610100900460ff161580156103d0576000805460ff1961ff0019909116610100171660011790555b603380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0384811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a38015610449576000805461ff00191690555b5050565b61045561031d565b61045e57600080fd5b610467816102f0565b6104b8576040805162461bcd60e51b815260206004820152601960248201527f63546f6b656e206973206e6f742077686974656c697374656400000000000000604482015290519081900360640190fd5b6001600160a01b038116600081815260666020526040808220805460ff19169055517f59699d7c9076678da939b1a98c86f40d8780564966fb30bf84d01b686dbb24c99190a250565b61050961031d565b61051257600080fd5b61051b81610528565b50565b3390565b303b1590565b6001600160a01b03811661053b57600080fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039290921691909117905556fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a7231582089d760120ecf3a83243a40b081529feae4629f9da43e94f04ad00bdd6397215464736f6c634300050b0032436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638f32d59b1161005b5780638f32d59b14610108578063c4d66de814610110578063dd21963514610136578063f2fde38b1461015c5761007d565b80630a7d2e1d146100825780632f52e595146100aa5780638da5cb5b146100e4575b600080fd5b6100a86004803603602081101561009857600080fd5b50356001600160a01b0316610182565b005b6100d0600480360360208110156100c057600080fd5b50356001600160a01b03166102f0565b604080519115158252519081900360200190f35b6100ec61030e565b604080516001600160a01b039092168252519081900360200190f35b6100d061031d565b6100a86004803603602081101561012657600080fd5b50356001600160a01b0316610343565b6100a86004803603602081101561014c57600080fd5b50356001600160a01b031661044d565b6100a86004803603602081101561017257600080fd5b50356001600160a01b0316610501565b61018a61031d565b61019357600080fd5b61019c816102f0565b156101ee576040805162461bcd60e51b815260206004820152601560248201527f63546f6b656e2069732077686974656c69737465640000000000000000000000604482015290519081900360640190fd5b806001600160a01b031663fe9c44ae6040518163ffffffff1660e01b815260040160206040518083038186803b15801561022757600080fd5b505afa15801561023b573d6000803e3d6000fd5b505050506040513d602081101561025157600080fd5b50516102a4576040805162461bcd60e51b815260206004820152601360248201527f746f6b656e206973206e6f742063546f6b656e00000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116600081815260666020526040808220805460ff19166001179055517f6b059312af62bbe5ac6a9a59761eaf444083ad356cdbf3761bc98857e061ecb59190a250565b6001600160a01b031660009081526066602052604090205460ff1690565b6033546001600160a01b031690565b6033546000906001600160a01b031661033461051e565b6001600160a01b031614905090565b600054610100900460ff168061035c575061035c610522565b8061036a575060005460ff16155b6103a55760405162461bcd60e51b815260040180806020018281038252602e8152602001806105b0602e913960400191505060405180910390fd5b600054610100900460ff161580156103d0576000805460ff1961ff0019909116610100171660011790555b603380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0384811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a38015610449576000805461ff00191690555b5050565b61045561031d565b61045e57600080fd5b610467816102f0565b6104b8576040805162461bcd60e51b815260206004820152601960248201527f63546f6b656e206973206e6f742077686974656c697374656400000000000000604482015290519081900360640190fd5b6001600160a01b038116600081815260666020526040808220805460ff19169055517f59699d7c9076678da939b1a98c86f40d8780564966fb30bf84d01b686dbb24c99190a250565b61050961031d565b61051257600080fd5b61051b81610528565b50565b3390565b303b1590565b6001600160a01b03811661053b57600080fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039290921691909117905556fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a7231582089d760120ecf3a83243a40b081529feae4629f9da43e94f04ad00bdd6397215464736f6c634300050b0032",
  "sourceMap": "203:1829:4:-;;;463:83;8:9:-1;5:2;;;30:1;27;20:12;5:2;463:83:4;494:45;528:10;494:33;;;;;:45;;:::i;:::-;203:1829;;1098:142:14;1024:12:22;;;;;;;;:31;;-1:-1:-1;1040:15:22;-1:-1:-1;;;;;1040:13:22;:15;:::i;:::-;1024:47;;;-1:-1:-1;1060:11:22;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:22;;;;;1225:18;1213:4;1225:18;;;1170:80;1163:6:14;:15;;-1:-1:-1;;;;;;1163:15:14;-1:-1:-1;;;;;1163:15:14;;;;;;;;;;;1193:40;;1226:6;;;-1:-1:-1;;1193:40:14;;-1:-1:-1;;1193:40:14;1268:14:22;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:22;;;1264:55;1098:142:14;;:::o;1409:498:22:-;1820:4;1864:17;1895:7;1409:498;:::o;203:1829:4:-;;;;;;;",
  "deployedSourceMap": "203:1829:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;203:1829:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;892:296;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;892:296:4;-1:-1:-1;;;;;892:296:4;;:::i;:::-;;1918:112;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1918:112:4;-1:-1:-1;;;;;1918:112:4;;:::i;:::-;;;;;;;;;;;;;;;;;;1303:77:14;;;:::i;:::-;;;;-1:-1:-1;;;;;1303:77:14;;;;;;;;;;;;;;1623:92;;;:::i;1098:142::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1098:142:14;-1:-1:-1;;;;;1098:142:14;;:::i;1443:222:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1443:222:4;-1:-1:-1;;;;;1443:222:4;;:::i;1886:107:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1886:107:14;-1:-1:-1;;;;;1886:107:14;;:::i;892:296:4:-;1507:9:14;:7;:9::i;:::-;1499:18;;;;;;977:22:4;986:12;977:8;:22::i;:::-;976:23;968:57;;;;;-1:-1:-1;;;968:57:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;1051:12;-1:-1:-1;;;;;1043:30:4;;:32;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1043:32:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1043:32:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1043:32:4;1035:64;;;;;-1:-1:-1;;;1035:64:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1109:21:4;;;;;;:7;:21;;;;;;:28;;-1:-1:-1;;1109:28:4;1133:4;1109:28;;;1152:29;;;1109:21;1152:29;892:296;:::o;1918:112::-;-1:-1:-1;;;;;2002:21:4;1979:4;2002:21;;;:7;:21;;;;;;;;;1918:112::o;1303:77:14:-;1367:6;;-1:-1:-1;;;;;1367:6:14;1303:77;:::o;1623:92::-;1702:6;;1663:4;;-1:-1:-1;;;;;1702:6:14;1686:12;:10;:12::i;:::-;-1:-1:-1;;;;;1686:22:14;;1679:29;;1623:92;:::o;1098:142::-;1024:12:22;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:22;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:22;;;;;1225:18;1213:4;1225:18;;;1170:80;1163:6:14;:15;;;;-1:-1:-1;;;;;1163:15:14;;;;;;;;;;;1193:40;;1226:6;;;-1:-1:-1;;1193:40:14;;-1:-1:-1;;1193:40:14;1268:14:22;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:22;;;1264:55;1098:142:14;;:::o;1443:222:4:-;1507:9:14;:7;:9::i;:::-;1499:18;;;;;;1525:22:4;1534:12;1525:8;:22::i;:::-;1517:60;;;;;-1:-1:-1;;;1517:60:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1587:21:4;;1611:5;1587:21;;;:7;:21;;;;;;:29;;-1:-1:-1;;1587:29:4;;;1631:27;;;1611:5;1631:27;1443:222;:::o;1886:107:14:-;1507:9;:7;:9::i;:::-;1499:18;;;;;;1958:28;1977:8;1958:18;:28::i;:::-;1886:107;:::o;791:88:17:-;862:10;791:88;:::o;1409:498:22:-;1820:4;1864:17;1895:7;1409:498;:::o;2137:183:14:-;-1:-1:-1;;;;;2210:22:14;;2202:31;;;;;;2269:6;;2248:38;;-1:-1:-1;;;;;2248:38:14;;;;2269:6;;2248:38;;2269:6;;2248:38;2296:6;:17;;;;-1:-1:-1;;;;;2296:17:14;;;;;;;;;;2137:183::o",
  "source": "pragma solidity 0.5.11;\n\nimport \"./interfaces/ICERC20.sol\";\nimport \"./lifecycle/OwnableWithoutRenounce.sol\";\nimport \"./interfaces/ICTokenManager.sol\";\n\n/**\n * @title CTokenManager\n * @author Sablier\n */\ncontract CTokenManager is ICTokenManager, OwnableWithoutRenounce {\n    /*** Storage Properties ***/\n\n    /**\n     * @notice Mapping of cTokens which can be used\n     */\n    mapping(address => bool) private cTokens;\n\n    /*** Contract Logic Starts Here */\n\n    constructor() public {\n        OwnableWithoutRenounce.initialize(msg.sender);\n    }\n\n    /*** Owner Functions ***/\n\n    /**\n     * @notice Whitelists a cToken for compounding streams.\n     * @dev Throws if the caller is not the owner of the contract.\n     *  Throws is the token is whitelisted.\n     *  Throws if the given address is not a `cToken`.\n     * @param tokenAddress The address of the cToken to whitelist.\n     */\n    function whitelistCToken(address tokenAddress) external onlyOwner {\n        require(!isCToken(tokenAddress), \"cToken is whitelisted\");\n        require(ICERC20(tokenAddress).isCToken(), \"token is not cToken\");\n        cTokens[tokenAddress] = true;\n        emit WhitelistCToken(tokenAddress);\n    }\n\n    /**\n     * @notice Discards a previously whitelisted cToken.\n     * @dev Throws if the caller is not the owner of the contract.\n     *  Throws if token is not whitelisted.\n     * @param tokenAddress The address of the cToken to discard.\n     */\n    function discardCToken(address tokenAddress) external onlyOwner {\n        require(isCToken(tokenAddress), \"cToken is not whitelisted\");\n        cTokens[tokenAddress] = false;\n        emit DiscardCToken(tokenAddress);\n    }\n\n    /*** View Functions ***/\n    /**\n     * @notice Checks if the given token address is one of the whitelisted cTokens.\n     * @param tokenAddress The address of the token to check.\n     * @return bool true=it is cToken, otherwise false.\n     */\n    function isCToken(address tokenAddress) public view returns (bool) {\n        return cTokens[tokenAddress];\n    }\n}\n",
  "sourcePath": "/media/dhiraj/code/hackfs/shopfs/IPFS-ETH-MarketPlace/contracts/sablier/CTokenManager.sol",
  "ast": {
    "absolutePath": "/media/dhiraj/code/hackfs/shopfs/IPFS-ETH-MarketPlace/contracts/sablier/CTokenManager.sol",
    "exportedSymbols": {
      "CTokenManager": [
        5462
      ]
    },
    "id": 5463,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5367,
        "literals": [
          "solidity",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/media/dhiraj/code/hackfs/shopfs/IPFS-ETH-MarketPlace/contracts/sablier/interfaces/ICERC20.sol",
        "file": "./interfaces/ICERC20.sol",
        "id": 5368,
        "nodeType": "ImportDirective",
        "scope": 5463,
        "sourceUnit": 8632,
        "src": "25:34:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/media/dhiraj/code/hackfs/shopfs/IPFS-ETH-MarketPlace/contracts/sablier/lifecycle/OwnableWithoutRenounce.sol",
        "file": "./lifecycle/OwnableWithoutRenounce.sol",
        "id": 5369,
        "nodeType": "ImportDirective",
        "scope": 5463,
        "sourceUnit": 8863,
        "src": "60:48:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/media/dhiraj/code/hackfs/shopfs/IPFS-ETH-MarketPlace/contracts/sablier/interfaces/ICTokenManager.sol",
        "file": "./interfaces/ICTokenManager.sol",
        "id": 5370,
        "nodeType": "ImportDirective",
        "scope": 5463,
        "sourceUnit": 8660,
        "src": "109:41:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5371,
              "name": "ICTokenManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8659,
              "src": "229:14:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICTokenManager_$8659",
                "typeString": "contract ICTokenManager"
              }
            },
            "id": 5372,
            "nodeType": "InheritanceSpecifier",
            "src": "229:14:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5373,
              "name": "OwnableWithoutRenounce",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8862,
              "src": "245:22:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnableWithoutRenounce_$8862",
                "typeString": "contract OwnableWithoutRenounce"
              }
            },
            "id": 5374,
            "nodeType": "InheritanceSpecifier",
            "src": "245:22:4"
          }
        ],
        "contractDependencies": [
          8659,
          8862,
          9104,
          9563
        ],
        "contractKind": "contract",
        "documentation": "@title CTokenManager\n@author Sablier",
        "fullyImplemented": true,
        "id": 5462,
        "linearizedBaseContracts": [
          5462,
          8862,
          9104,
          9563,
          8659
        ],
        "name": "CTokenManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5378,
            "name": "cTokens",
            "nodeType": "VariableDeclaration",
            "scope": 5462,
            "src": "376:40:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 5377,
              "keyType": {
                "id": 5375,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "384:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "376:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 5376,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "395:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5388,
              "nodeType": "Block",
              "src": "484:62:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5384,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9578,
                          "src": "528:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "528:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5381,
                        "name": "OwnableWithoutRenounce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8862,
                        "src": "494:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OwnableWithoutRenounce_$8862_$",
                          "typeString": "type(contract OwnableWithoutRenounce)"
                        }
                      },
                      "id": 5383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8794,
                      "src": "494:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "494:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5387,
                  "nodeType": "ExpressionStatement",
                  "src": "494:45:4"
                }
              ]
            },
            "documentation": "* Contract Logic Starts Here ",
            "id": 5389,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "474:2:4"
            },
            "returnParameters": {
              "id": 5380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:0:4"
            },
            "scope": 5462,
            "src": "463:83:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5423,
              "nodeType": "Block",
              "src": "958:230:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "976:23:4",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5398,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5391,
                              "src": "986:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5397,
                            "name": "isCToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5461,
                            "src": "977:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 5399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "977:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63546f6b656e2069732077686974656c6973746564",
                        "id": 5401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1001:23:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9487ed807424039112da40472c0c1ff850943632213446e98c037dc96fc79893",
                          "typeString": "literal_string \"cToken is whitelisted\""
                        },
                        "value": "cToken is whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9487ed807424039112da40472c0c1ff850943632213446e98c037dc96fc79893",
                          "typeString": "literal_string \"cToken is whitelisted\""
                        }
                      ],
                      "id": 5396,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9581,
                        9582
                      ],
                      "referencedDeclaration": 9582,
                      "src": "968:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "968:57:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5403,
                  "nodeType": "ExpressionStatement",
                  "src": "968:57:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 5406,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5391,
                                "src": "1051:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 5405,
                              "name": "ICERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8631,
                              "src": "1043:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICERC20_$8631_$",
                                "typeString": "type(contract ICERC20)"
                              }
                            },
                            "id": 5407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1043:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICERC20_$8631",
                              "typeString": "contract ICERC20"
                            }
                          },
                          "id": 5408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isCToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8568,
                          "src": "1043:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 5409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1043:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "746f6b656e206973206e6f742063546f6b656e",
                        "id": 5410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1077:21:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94408918d0155190e3219a7946203c292f159a9552a70d918c2bb3d30a65fab3",
                          "typeString": "literal_string \"token is not cToken\""
                        },
                        "value": "token is not cToken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94408918d0155190e3219a7946203c292f159a9552a70d918c2bb3d30a65fab3",
                          "typeString": "literal_string \"token is not cToken\""
                        }
                      ],
                      "id": 5404,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9581,
                        9582
                      ],
                      "referencedDeclaration": 9582,
                      "src": "1035:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1035:64:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5412,
                  "nodeType": "ExpressionStatement",
                  "src": "1035:64:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5413,
                        "name": "cTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5378,
                        "src": "1109:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5415,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5414,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5391,
                        "src": "1117:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1109:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 5416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1133:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1109:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5418,
                  "nodeType": "ExpressionStatement",
                  "src": "1109:28:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5420,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5391,
                        "src": "1168:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5419,
                      "name": "WhitelistCToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8641,
                      "src": "1152:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1152:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5422,
                  "nodeType": "EmitStatement",
                  "src": "1147:34:4"
                }
              ]
            },
            "documentation": "@notice Whitelists a cToken for compounding streams.\n@dev Throws if the caller is not the owner of the contract.\n Throws is the token is whitelisted.\n Throws if the given address is not a `cToken`.\n@param tokenAddress The address of the cToken to whitelist.",
            "id": 5424,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5394,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5393,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8811,
                  "src": "948:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "948:9:4"
              }
            ],
            "name": "whitelistCToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5391,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5424,
                  "src": "917:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "917:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "916:22:4"
            },
            "returnParameters": {
              "id": 5395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "958:0:4"
            },
            "scope": 5462,
            "src": "892:296:4",
            "stateMutability": "nonpayable",
            "superFunction": 8646,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5448,
              "nodeType": "Block",
              "src": "1507:158:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5433,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5426,
                            "src": "1534:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5432,
                          "name": "isCToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5461,
                          "src": "1525:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 5434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1525:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63546f6b656e206973206e6f742077686974656c6973746564",
                        "id": 5435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1549:27:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_028effcaad1abe4d036a94b79064c8ab8a88c2efe091f889a81695f48476bae9",
                          "typeString": "literal_string \"cToken is not whitelisted\""
                        },
                        "value": "cToken is not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_028effcaad1abe4d036a94b79064c8ab8a88c2efe091f889a81695f48476bae9",
                          "typeString": "literal_string \"cToken is not whitelisted\""
                        }
                      ],
                      "id": 5431,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9581,
                        9582
                      ],
                      "referencedDeclaration": 9582,
                      "src": "1517:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1517:60:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5437,
                  "nodeType": "ExpressionStatement",
                  "src": "1517:60:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5438,
                        "name": "cTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5378,
                        "src": "1587:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5440,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5439,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5426,
                        "src": "1595:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1587:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 5441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1611:5:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1587:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5443,
                  "nodeType": "ExpressionStatement",
                  "src": "1587:29:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5445,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5426,
                        "src": "1645:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5444,
                      "name": "DiscardCToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8637,
                      "src": "1631:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1631:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5447,
                  "nodeType": "EmitStatement",
                  "src": "1626:32:4"
                }
              ]
            },
            "documentation": "@notice Discards a previously whitelisted cToken.\n@dev Throws if the caller is not the owner of the contract.\n Throws if token is not whitelisted.\n@param tokenAddress The address of the cToken to discard.",
            "id": 5449,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5429,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5428,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8811,
                  "src": "1497:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1497:9:4"
              }
            ],
            "name": "discardCToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5426,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5449,
                  "src": "1466:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1466:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1465:22:4"
            },
            "returnParameters": {
              "id": 5430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1507:0:4"
            },
            "scope": 5462,
            "src": "1443:222:4",
            "stateMutability": "nonpayable",
            "superFunction": 8651,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5460,
              "nodeType": "Block",
              "src": "1985:45:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 5456,
                      "name": "cTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5378,
                      "src": "2002:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 5458,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 5457,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5451,
                      "src": "2010:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2002:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5455,
                  "id": 5459,
                  "nodeType": "Return",
                  "src": "1995:28:4"
                }
              ]
            },
            "documentation": "@notice Checks if the given token address is one of the whitelisted cTokens.\n@param tokenAddress The address of the token to check.\n@return bool true=it is cToken, otherwise false.",
            "id": 5461,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5451,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5461,
                  "src": "1936:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1936:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1935:22:4"
            },
            "returnParameters": {
              "id": 5455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5454,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5461,
                  "src": "1979:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5453,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1979:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1978:6:4"
            },
            "scope": 5462,
            "src": "1918:112:4",
            "stateMutability": "view",
            "superFunction": 8658,
            "visibility": "public"
          }
        ],
        "scope": 5463,
        "src": "203:1829:4"
      }
    ],
    "src": "0:2033:4"
  },
  "legacyAST": {
    "absolutePath": "/media/dhiraj/code/hackfs/shopfs/IPFS-ETH-MarketPlace/contracts/sablier/CTokenManager.sol",
    "exportedSymbols": {
      "CTokenManager": [
        5462
      ]
    },
    "id": 5463,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5367,
        "literals": [
          "solidity",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/media/dhiraj/code/hackfs/shopfs/IPFS-ETH-MarketPlace/contracts/sablier/interfaces/ICERC20.sol",
        "file": "./interfaces/ICERC20.sol",
        "id": 5368,
        "nodeType": "ImportDirective",
        "scope": 5463,
        "sourceUnit": 8632,
        "src": "25:34:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/media/dhiraj/code/hackfs/shopfs/IPFS-ETH-MarketPlace/contracts/sablier/lifecycle/OwnableWithoutRenounce.sol",
        "file": "./lifecycle/OwnableWithoutRenounce.sol",
        "id": 5369,
        "nodeType": "ImportDirective",
        "scope": 5463,
        "sourceUnit": 8863,
        "src": "60:48:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/media/dhiraj/code/hackfs/shopfs/IPFS-ETH-MarketPlace/contracts/sablier/interfaces/ICTokenManager.sol",
        "file": "./interfaces/ICTokenManager.sol",
        "id": 5370,
        "nodeType": "ImportDirective",
        "scope": 5463,
        "sourceUnit": 8660,
        "src": "109:41:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5371,
              "name": "ICTokenManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8659,
              "src": "229:14:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICTokenManager_$8659",
                "typeString": "contract ICTokenManager"
              }
            },
            "id": 5372,
            "nodeType": "InheritanceSpecifier",
            "src": "229:14:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5373,
              "name": "OwnableWithoutRenounce",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8862,
              "src": "245:22:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnableWithoutRenounce_$8862",
                "typeString": "contract OwnableWithoutRenounce"
              }
            },
            "id": 5374,
            "nodeType": "InheritanceSpecifier",
            "src": "245:22:4"
          }
        ],
        "contractDependencies": [
          8659,
          8862,
          9104,
          9563
        ],
        "contractKind": "contract",
        "documentation": "@title CTokenManager\n@author Sablier",
        "fullyImplemented": true,
        "id": 5462,
        "linearizedBaseContracts": [
          5462,
          8862,
          9104,
          9563,
          8659
        ],
        "name": "CTokenManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5378,
            "name": "cTokens",
            "nodeType": "VariableDeclaration",
            "scope": 5462,
            "src": "376:40:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 5377,
              "keyType": {
                "id": 5375,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "384:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "376:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 5376,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "395:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5388,
              "nodeType": "Block",
              "src": "484:62:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5384,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9578,
                          "src": "528:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "528:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5381,
                        "name": "OwnableWithoutRenounce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8862,
                        "src": "494:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OwnableWithoutRenounce_$8862_$",
                          "typeString": "type(contract OwnableWithoutRenounce)"
                        }
                      },
                      "id": 5383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8794,
                      "src": "494:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "494:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5387,
                  "nodeType": "ExpressionStatement",
                  "src": "494:45:4"
                }
              ]
            },
            "documentation": "* Contract Logic Starts Here ",
            "id": 5389,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "474:2:4"
            },
            "returnParameters": {
              "id": 5380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:0:4"
            },
            "scope": 5462,
            "src": "463:83:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5423,
              "nodeType": "Block",
              "src": "958:230:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "976:23:4",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5398,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5391,
                              "src": "986:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5397,
                            "name": "isCToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5461,
                            "src": "977:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 5399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "977:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63546f6b656e2069732077686974656c6973746564",
                        "id": 5401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1001:23:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9487ed807424039112da40472c0c1ff850943632213446e98c037dc96fc79893",
                          "typeString": "literal_string \"cToken is whitelisted\""
                        },
                        "value": "cToken is whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9487ed807424039112da40472c0c1ff850943632213446e98c037dc96fc79893",
                          "typeString": "literal_string \"cToken is whitelisted\""
                        }
                      ],
                      "id": 5396,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9581,
                        9582
                      ],
                      "referencedDeclaration": 9582,
                      "src": "968:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "968:57:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5403,
                  "nodeType": "ExpressionStatement",
                  "src": "968:57:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 5406,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5391,
                                "src": "1051:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 5405,
                              "name": "ICERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8631,
                              "src": "1043:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICERC20_$8631_$",
                                "typeString": "type(contract ICERC20)"
                              }
                            },
                            "id": 5407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1043:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICERC20_$8631",
                              "typeString": "contract ICERC20"
                            }
                          },
                          "id": 5408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isCToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8568,
                          "src": "1043:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 5409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1043:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "746f6b656e206973206e6f742063546f6b656e",
                        "id": 5410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1077:21:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94408918d0155190e3219a7946203c292f159a9552a70d918c2bb3d30a65fab3",
                          "typeString": "literal_string \"token is not cToken\""
                        },
                        "value": "token is not cToken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94408918d0155190e3219a7946203c292f159a9552a70d918c2bb3d30a65fab3",
                          "typeString": "literal_string \"token is not cToken\""
                        }
                      ],
                      "id": 5404,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9581,
                        9582
                      ],
                      "referencedDeclaration": 9582,
                      "src": "1035:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1035:64:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5412,
                  "nodeType": "ExpressionStatement",
                  "src": "1035:64:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5413,
                        "name": "cTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5378,
                        "src": "1109:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5415,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5414,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5391,
                        "src": "1117:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1109:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 5416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1133:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1109:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5418,
                  "nodeType": "ExpressionStatement",
                  "src": "1109:28:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5420,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5391,
                        "src": "1168:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5419,
                      "name": "WhitelistCToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8641,
                      "src": "1152:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1152:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5422,
                  "nodeType": "EmitStatement",
                  "src": "1147:34:4"
                }
              ]
            },
            "documentation": "@notice Whitelists a cToken for compounding streams.\n@dev Throws if the caller is not the owner of the contract.\n Throws is the token is whitelisted.\n Throws if the given address is not a `cToken`.\n@param tokenAddress The address of the cToken to whitelist.",
            "id": 5424,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5394,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5393,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8811,
                  "src": "948:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "948:9:4"
              }
            ],
            "name": "whitelistCToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5391,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5424,
                  "src": "917:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "917:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "916:22:4"
            },
            "returnParameters": {
              "id": 5395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "958:0:4"
            },
            "scope": 5462,
            "src": "892:296:4",
            "stateMutability": "nonpayable",
            "superFunction": 8646,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5448,
              "nodeType": "Block",
              "src": "1507:158:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5433,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5426,
                            "src": "1534:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5432,
                          "name": "isCToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5461,
                          "src": "1525:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 5434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1525:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63546f6b656e206973206e6f742077686974656c6973746564",
                        "id": 5435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1549:27:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_028effcaad1abe4d036a94b79064c8ab8a88c2efe091f889a81695f48476bae9",
                          "typeString": "literal_string \"cToken is not whitelisted\""
                        },
                        "value": "cToken is not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_028effcaad1abe4d036a94b79064c8ab8a88c2efe091f889a81695f48476bae9",
                          "typeString": "literal_string \"cToken is not whitelisted\""
                        }
                      ],
                      "id": 5431,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9581,
                        9582
                      ],
                      "referencedDeclaration": 9582,
                      "src": "1517:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1517:60:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5437,
                  "nodeType": "ExpressionStatement",
                  "src": "1517:60:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5438,
                        "name": "cTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5378,
                        "src": "1587:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5440,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5439,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5426,
                        "src": "1595:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1587:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 5441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1611:5:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1587:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5443,
                  "nodeType": "ExpressionStatement",
                  "src": "1587:29:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5445,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5426,
                        "src": "1645:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5444,
                      "name": "DiscardCToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8637,
                      "src": "1631:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1631:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5447,
                  "nodeType": "EmitStatement",
                  "src": "1626:32:4"
                }
              ]
            },
            "documentation": "@notice Discards a previously whitelisted cToken.\n@dev Throws if the caller is not the owner of the contract.\n Throws if token is not whitelisted.\n@param tokenAddress The address of the cToken to discard.",
            "id": 5449,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5429,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5428,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8811,
                  "src": "1497:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1497:9:4"
              }
            ],
            "name": "discardCToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5426,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5449,
                  "src": "1466:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1466:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1465:22:4"
            },
            "returnParameters": {
              "id": 5430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1507:0:4"
            },
            "scope": 5462,
            "src": "1443:222:4",
            "stateMutability": "nonpayable",
            "superFunction": 8651,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5460,
              "nodeType": "Block",
              "src": "1985:45:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 5456,
                      "name": "cTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5378,
                      "src": "2002:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 5458,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 5457,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5451,
                      "src": "2010:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2002:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5455,
                  "id": 5459,
                  "nodeType": "Return",
                  "src": "1995:28:4"
                }
              ]
            },
            "documentation": "@notice Checks if the given token address is one of the whitelisted cTokens.\n@param tokenAddress The address of the token to check.\n@return bool true=it is cToken, otherwise false.",
            "id": 5461,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5451,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5461,
                  "src": "1936:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1936:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1935:22:4"
            },
            "returnParameters": {
              "id": 5455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5454,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5461,
                  "src": "1979:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5453,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1979:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1978:6:4"
            },
            "scope": 5462,
            "src": "1918:112:4",
            "stateMutability": "view",
            "superFunction": 8658,
            "visibility": "public"
          }
        ],
        "scope": 5463,
        "src": "203:1829:4"
      }
    ],
    "src": "0:2033:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-08-01T13:06:26.332Z",
  "devdoc": {
    "author": "Sablier",
    "methods": {
      "discardCToken(address)": {
        "details": "Throws if the caller is not the owner of the contract. Throws if token is not whitelisted.",
        "params": {
          "tokenAddress": "The address of the cToken to discard."
        }
      },
      "initialize(address)": {
        "details": "The Ownable constructor sets the original `owner` of the contract to the sender account."
      },
      "isCToken(address)": {
        "params": {
          "tokenAddress": "The address of the token to check."
        },
        "return": "bool true=it is cToken, otherwise false."
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "whitelistCToken(address)": {
        "details": "Throws if the caller is not the owner of the contract. Throws is the token is whitelisted. Throws if the given address is not a `cToken`.",
        "params": {
          "tokenAddress": "The address of the cToken to whitelist."
        }
      }
    },
    "title": "CTokenManager"
  },
  "userdoc": {
    "methods": {
      "constructor": "* Contract Logic Starts Here ",
      "discardCToken(address)": {
        "notice": "Discards a previously whitelisted cToken."
      },
      "isCToken(address)": {
        "notice": "Checks if the given token address is one of the whitelisted cTokens."
      },
      "whitelistCToken(address)": {
        "notice": "Whitelists a cToken for compounding streams."
      }
    }
  }
}